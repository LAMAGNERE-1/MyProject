p{
	color: red; 
}

/* Pseudo classes : */
p:first-child{
	color: green; 
}

p:last-child{ /* Fonctionne pour une suite d'éléments contenu dans un bloc parent dont la fin est définie */
	color: blue; 
}

/* :last-of-type : sélectionne tous les derniers éléments de ce type dans l'ensemble du document */

p:nth-child(even){ /* éléments pair */
	color: blue;
}

p:nth-child(odd){
	color: brown;
}

p:nth-child(5),
p:nth-child(6){ /* Plusieurs élements précis n°5 et n°6 */
	color: orange; 
}


div:not(.zoneB){ /* Toutes les sauf la class="zoneB" (exclusion d'un seul élément)*/
	font-weight: bold; 
}

.zoneA{
	color: #f56f56;
}

.zoneB{
	color: #996633;
}

.couleurBleu{
	color: #336699;
}

#zoneC{
	color: #98F32F;
}

/* pseudos elements : */
#zoneC:after{
	content: "xdd";
}

#zoneD span{
	color: #32FF32;
}
/*
L'utilisation de child permet d'accéder à des éléments en fonction de leur positionnement dans une suite d'éléments identiques. 
MAIS n'est pas très rassurant dans le cas où le code HTML serait amené à évoluer. Il est préférable de favoriser l'utilisation des classes et des ID. 
--------------
Différence entre classe et ID: 
	Une classe est appelée par un "."
	Un ID es appelé par un "#"
	Le W3C recommande fortement d'utiliser les ID une seule fois par page. Pour la sélection des éléments en JS l'utisation des ID unique est également préconisé. 
----------------
Styliser un élément par : 
	classe
	ID
	Child (position)
	balise
----------------
Règles d'écriture : 
	div.zone{} : la div qui possède la classe zone
	div .zone{} : L'élement dont la classe est zone et qui est contenu dans une DIV
	.maClasse1, maClasse2{} : Il y a la virgule, pour appliqué le style à plusieurs éléments. 
	
	
	


*/










